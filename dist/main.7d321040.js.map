{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX,EAA2C;;AAC3C,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,MAAM,myCAAV;AA4CA,IAAIC,OAAO,GAAG,EAAd,EACA;;AACA,IAAIC,CAAC,GAAG,CAAR,EAEA;AACA;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAK;AACZC,EAAAA,UAAU,CAAC,YAAI;AACX;AACA;AACA,QAAGJ,MAAM,CAACE,CAAD,CAAN,KAAc,IAAjB,EAAsB;AAClBD,MAAAA,OAAO,IAAI,MAAX;AACH,KAFD,MAEM,IAAID,MAAM,CAACE,CAAD,CAAN,KAAc,GAAlB,EAAsB;AACxBD,MAAAA,OAAO,IAAI,OAAX;AACH,KAFK,MAEA;AACFA,MAAAA,OAAO,IAAID,MAAM,CAACE,CAAD,CAAjB;AACH;;AACDN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,OAAjB;AACAF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,KAAlB,EAZW,CAYgB;;AAC3BZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAgB,KAAhB,EAbW,CAaY;;AACvB,QAAGN,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAgB,CAAvB,EAAyB;AACrBP,MAAAA,CAAC,IAAI,CAAL;AACAC,MAAAA,IAAI;AACP;AACJ,GAlBS,EAkBR,CAlBQ,CAAV;AAmBH,CApBD;;AAqBAA,IAAI","file":"main.7d321040.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html') //通过css选择器找到这个元素\r\nlet style = document.querySelector('#style')\r\nlet string = `/*\r\n我是郑垚，刚开始学习前端.\r\n我现在要做一个八卦图\r\n首先我要准备一个div\r\n*/\r\n#div1{\r\n    border:1px solid red;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/*\r\n接下来我把div变成一个八卦图\r\n首先，将div变成一个圆\r\n*/\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/*\r\n接下来将圆形改成八卦样式\r\n一黑一白\r\n*/\r\n#div1{\r\n    background:linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*\r\n将八卦两头变成圆形\r\n*/\r\n#div1::before{\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    border-radius:50%;\r\n    background:radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);;\r\n}\r\n#div1::after{\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    border-radius:50%;\r\n    background:radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);;\r\n}\r\n`;\r\nlet string2 = '';\r\n// string = string.replace(/\\n/g,'<br>');  //replace把回车变成换行br；/\\n/g 正则表达式，选中所有的回车\r\nlet n = 0;\r\n\r\n// string[0].charCodeAt() 可以得到字符unicode编码\r\n//采用递归的方式，运用setTimeout，每秒钟都会自动加1\r\nlet step = () =>{\r\n    setTimeout(()=>{\r\n        //如果string[n]==='\\n'，那么就<br>换行，否则就复制string[n]中的值\r\n        // string2 += (string[n] === '\\n' ? \"<br>\" : string[n])\r\n        if(string[n] === '\\n'){\r\n            string2 += \"<br>\"\r\n        }else if (string[n] === ' '){\r\n            string2 += \"&nbsp\"\r\n        }else {\r\n            string2 += string[n]\r\n        }\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0,n);\r\n        window.scrollTo(0,99999);  //JS设置页面的滚动条自动滚\r\n        html.scrollTo(0,99999);//JS设置页面的滚动条自动滚\r\n        if(n < string.length - 1){\r\n            n += 1;\r\n            step();\r\n        }\r\n    },0);\r\n}\r\nstep();\r\n"]}